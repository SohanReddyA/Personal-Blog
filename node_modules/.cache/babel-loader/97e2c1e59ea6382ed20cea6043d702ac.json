{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pingu\\\\Desktop\\\\QSTP\\\\WebD\\\\final_project\\\\src\\\\components\\\\pages\\\\DashBoard.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Blogs from './AdminBlogs/Blog';\nimport Pagination from './AdminBlogs/Pagination';\nimport BlogData from './AdminBlogs/BlogData';\nimport axios from 'axios';\n\nclass DashBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      blogs: [],\n      currentPage: 1,\n      blogsPerPage: 10,\n      totalBlogs: 0,\n      loading: false,\n      loadingBlog: false,\n      userName: '',\n      password: '',\n      blogId: 0,\n      createBlog: false\n    };\n\n    this.getBlogs = async () => {\n      this.setState({\n        loading: true\n      });\n      let res = await axios.get('https://blogdatabase0101.herokuapp.com/page/' + this.state.currentPage);\n      this.setState({\n        blogs: res.data.blogs,\n        totalBlogs: res.data.count,\n        loading: false\n      });\n    };\n\n    this.getBlog = async id => {\n      this.setState({\n        loadingBlog: true\n      });\n      let res = await axios.get('https://blogdatabase0101.herokuapp.com/' + id);\n      console.log(\"LLikes=\", res.data.likes);\n      this.setState({\n        blog: res.data,\n        loadingBlog: false\n      });\n    };\n\n    this.CreateBlog = () => {\n      this.setState({\n        createBlog: true\n      });\n    };\n\n    this.paginate = pageNumber => {\n      this.setState({\n        currentPage: pageNumber\n      });\n    };\n\n    this.setId = id => {\n      this.setState({\n        blogId: id\n      });\n      this.getBlog(id);\n    };\n\n    this.comment = comment => {\n      console.log('commented');\n      console.log(comment);\n      axios.put('https://blogdatabase0101.herokuapp.com/' + this.state.blogId, [{\n        \"propName\": \"comments\",\n        \"value\": {\n          \"value\": \"\" + comment\n        }\n      }]).then(res => {\n        this.getBlog(this.state.blogId);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getBlogs();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentPage != prevState.currentPage) this.getBlogs();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, () => {\n      if (!this.state.createBlog) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-primary btn-block\",\n          onClick: this.CreateBlog,\n          style: {\n            textAlign: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 54\n          }\n        }, \"Create a new Blog\");\n      }\n    }, () => {\n      if (!this.state.createBlog) {\n        if (!this.state.viewBlog) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"container mt-5\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Blogs, {\n            blogs: this.state.blogs,\n            loading: this.state.loading,\n            blogId: this.setId,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(Pagination, {\n            blogsPerPage: this.state.blogsPerPage,\n            totalBlogs: this.state.totalBlogs,\n            paginate: this.paginate,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }\n          }));\n        }\n      }\n    });\n  }\n\n}\n\nexport default DashBoard;","map":{"version":3,"sources":["C:/Users/pingu/Desktop/QSTP/WebD/final_project/src/components/pages/DashBoard.js"],"names":["React","Component","BrowserRouter","Router","Route","Blogs","Pagination","BlogData","axios","DashBoard","state","blogs","currentPage","blogsPerPage","totalBlogs","loading","loadingBlog","userName","password","blogId","createBlog","getBlogs","setState","res","get","data","count","getBlog","id","console","log","likes","blog","CreateBlog","paginate","pageNumber","setId","comment","put","then","componentDidMount","componentDidUpdate","prevProps","prevState","render","textAlign","viewBlog"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,SAAN,SAAwBR,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE7BS,KAF6B,GAErB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,WAAW,EAAE,CAFT;AAGJC,MAAAA,YAAY,EAAE,EAHV;AAIJC,MAAAA,UAAU,EAAE,CAJR;AAKJC,MAAAA,OAAO,EAAE,KALL;AAMJC,MAAAA,WAAW,EAAC,KANR;AAOJC,MAAAA,QAAQ,EAAE,EAPN;AAQJC,MAAAA,QAAQ,EAAE,EARN;AASJC,MAAAA,MAAM,EAAE,CATJ;AAUJC,MAAAA,UAAU,EAAC;AAVP,KAFqB;;AAAA,SAoB3BC,QApB2B,GAoBhB,YAAY;AACrB,WAAKC,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,UAAIQ,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CACd,iDAAiD,KAAKd,KAAL,CAAWE,WAD9C,CAAhB;AAGA,WAAKU,QAAL,CAAc;AACZX,QAAAA,KAAK,EAAEY,GAAG,CAACE,IAAJ,CAASd,KADJ;AAEZG,QAAAA,UAAU,EAAES,GAAG,CAACE,IAAJ,CAASC,KAFT;AAGZX,QAAAA,OAAO,EAAE;AAHG,OAAd;AAKD,KA9B0B;;AAAA,SA+B3BY,OA/B2B,GA+BjB,MAAOC,EAAP,IAAc;AACtB,WAAKN,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,UAAIO,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CACd,4CAA4CI,EAD9B,CAAhB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBP,GAAG,CAACE,IAAJ,CAASM,KAA/B;AACA,WAAKT,QAAL,CAAc;AACZU,QAAAA,IAAI,EAAET,GAAG,CAACE,IADE;AAEZT,QAAAA,WAAW,EAAE;AAFD,OAAd;AAID,KAzC0B;;AAAA,SA0C3BiB,UA1C2B,GA0Cd,MAAK;AAChB,WAAKX,QAAL,CAAc;AACZF,QAAAA,UAAU,EAAC;AADC,OAAd;AAGD,KA9C0B;;AAAA,SA+C3Bc,QA/C2B,GA+CfC,UAAD,IAAgB;AACzB,WAAKb,QAAL,CAAc;AACZV,QAAAA,WAAW,EAAEuB;AADD,OAAd;AAGD,KAnD0B;;AAAA,SAoD3BC,KApD2B,GAoDlBR,EAAD,IAAQ;AACd,WAAKN,QAAL,CAAc;AAACH,QAAAA,MAAM,EAACS;AAAR,OAAd;AACA,WAAKD,OAAL,CAAaC,EAAb;AACD,KAvD0B;;AAAA,SAwD3BS,OAxD2B,GAwDhBA,OAAD,IAAa;AACrBR,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYO,OAAZ;AACA7B,MAAAA,KAAK,CAAC8B,GAAN,CAAU,4CAA4C,KAAK5B,KAAL,CAAWS,MAAjE,EAAwE,CAAC;AAAC,oBAAW,UAAZ;AAAuB,iBAAQ;AAAC,mBAAQ,KAAGkB;AAAZ;AAA/B,OAAD,CAAxE,EAAgIE,IAAhI,CAAsIhB,GAAD,IAAO;AAAC,aAAKI,OAAL,CAAa,KAAKjB,KAAL,CAAWS,MAAxB;AAAgC,OAA7K;AACD,KA5D0B;AAAA;;AAc3BqB,EAAAA,iBAAiB,GAAG;AAClB,SAAKnB,QAAL;AACD;;AACDoB,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAI,KAAKjC,KAAL,CAAWE,WAAX,IAA0B+B,SAAS,CAAC/B,WAAxC,EAAqD,KAAKS,QAAL;AACtD;;AA0CDuB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,MAAI;AAAC,UAAG,CAAC,KAAKlC,KAAL,CAAWU,UAAf,EAA2B;AAAC,4BAAO;AAAQ,UAAA,SAAS,EAAC,2BAAlB;AAA8C,UAAA,OAAO,EAAE,KAAKa,UAA5D;AAAuE,UAAA,KAAK,EAAE;AAACY,YAAAA,SAAS,EAAC;AAAX,WAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AAC/B;AAAC,KAFN,EAGK,MAAI;AAAC,UAAG,CAAC,KAAKnC,KAAL,CAAWU,UAAf,EACL;AACE,YAAG,CAAC,KAAKV,KAAL,CAAWoC,QAAf,EACA;AAAC,8BACJ;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,KAAD;AACE,YAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWC,KADpB;AAEE,YAAA,OAAO,EAAE,KAAKD,KAAL,CAAWK,OAFtB;AAGE,YAAA,MAAM,EAAE,KAAKqB,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,oBAAC,UAAD;AACE,YAAA,YAAY,EAAE,KAAK1B,KAAL,CAAWG,YAD3B;AAEE,YAAA,UAAU,EAAE,KAAKH,KAAL,CAAWI,UAFzB;AAGE,YAAA,QAAQ,EAAE,KAAKoB,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,CADI;AAaH;AAAC;AAAC,KAnBP,CADF;AAuBD;;AArF0B;;AAwFjC,eAAezB,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Blogs from './AdminBlogs/Blog';\r\nimport Pagination from './AdminBlogs/Pagination';\r\nimport BlogData from './AdminBlogs/BlogData';\r\nimport axios from 'axios';\r\nclass DashBoard extends Component{    \r\n\r\n    state = {\r\n        blogs: [],\r\n        currentPage: 1,\r\n        blogsPerPage: 10,\r\n        totalBlogs: 0,\r\n        loading: false,\r\n        loadingBlog:false,\r\n        userName: '',\r\n        password: '',\r\n        blogId: 0,\r\n        createBlog:false,\r\n      };\r\n      componentDidMount() {\r\n        this.getBlogs();\r\n      }\r\n      componentDidUpdate(prevProps, prevState) {    \r\n        if (this.state.currentPage != prevState.currentPage) this.getBlogs();\r\n      }\r\n      getBlogs = async () => {\r\n        this.setState({ loading: true });\r\n        let res = await axios.get(\r\n          'https://blogdatabase0101.herokuapp.com/page/' + this.state.currentPage\r\n        );\r\n        this.setState({\r\n          blogs: res.data.blogs,\r\n          totalBlogs: res.data.count,\r\n          loading: false,\r\n        });\r\n      };\r\n      getBlog = async (id) => {\r\n        this.setState({ loadingBlog: true });\r\n        let res = await axios.get(\r\n          'https://blogdatabase0101.herokuapp.com/' + id\r\n        );\r\n        console.log(\"LLikes=\",res.data.likes)\r\n        this.setState({\r\n          blog: res.data,\r\n          loadingBlog: false,\r\n        });\r\n      };\r\n      CreateBlog = () =>{\r\n        this.setState({\r\n          createBlog:true,\r\n        })\r\n      }\r\n      paginate = (pageNumber) => {\r\n        this.setState({\r\n          currentPage: pageNumber,\r\n        });\r\n      };\r\n      setId = (id) => {\r\n        this.setState({blogId:id})\r\n        this.getBlog(id);\r\n      };\r\n      comment = (comment) => {\r\n        console.log('commented')\r\n        console.log(comment)\r\n        axios.put('https://blogdatabase0101.herokuapp.com/' + this.state.blogId,[{\"propName\":\"comments\",\"value\":{\"value\":\"\"+comment}}]).then((res)=>{this.getBlog(this.state.blogId)});\r\n      }\r\n      render() {\r\n        return (\r\n          <div>\r\n            {()=>{if(!this.state.createBlog) {return(<button className=\"btn btn-primary btn-block\" onClick={this.CreateBlog}style={{textAlign:\"center\"}}>Create a new Blog</button>)\r\n              }}}\r\n              {()=>{if(!this.state.createBlog)\r\n               {\r\n                 if(!this.state.viewBlog)\r\n                 {return(\r\n              <div className=\"container mt-5\">\r\n                <Blogs\r\n                  blogs={this.state.blogs}\r\n                  loading={this.state.loading}\r\n                  blogId={this.setId}\r\n                />\r\n                <Pagination\r\n                  blogsPerPage={this.state.blogsPerPage}\r\n                  totalBlogs={this.state.totalBlogs}\r\n                  paginate={this.paginate}\r\n                />\r\n              </div>)\r\n              }}}}\r\n              </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default DashBoard;"]},"metadata":{},"sourceType":"module"}