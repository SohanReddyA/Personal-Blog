{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pingu\\\\Desktop\\\\QSTP\\\\WebD\\\\final_project\\\\src\\\\components\\\\pages\\\\DashBoard.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Blogs from './AdminBlogs/Blog';\nimport Pagination from './AdminBlogs/Pagination';\nimport BlogData from './AdminBlogs/BlogData';\nimport axios from 'axios';\n\nclass DashBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      blogs: [],\n      currentPage: 1,\n      blogsPerPage: 10,\n      totalBlogs: 0,\n      loading: false,\n      loadingBlog: false,\n      userName: '',\n      password: '',\n      blogId: 0\n    };\n\n    this.getBlogs = async () => {\n      this.setState({\n        loading: true\n      });\n      let res = await axios.get('https://blogdatabase0101.herokuapp.com/page/' + this.state.currentPage);\n      this.setState({\n        blogs: res.data.blogs,\n        totalBlogs: res.data.count,\n        loading: false\n      });\n    };\n\n    this.getBlog = async id => {\n      this.setState({\n        loadingBlog: true\n      });\n      let res = await axios.get('https://blogdatabase0101.herokuapp.com/' + id);\n      console.log('LLikes=', res.data.likes);\n      this.setState({\n        blog: res.data,\n        loadingBlog: false\n      });\n    };\n\n    this.paginate = pageNumber => {\n      this.setState({\n        currentPage: pageNumber\n      });\n    };\n\n    this.setId = id => {\n      this.setState({\n        blogId: id\n      });\n      this.getBlog(id);\n    };\n\n    this.comment = comment => {\n      console.log('commented');\n      console.log(comment);\n      axios.put('https://blogdatabase0101.herokuapp.com/' + this.state.blogId, [{\n        propName: 'comments',\n        value: {\n          value: '' + comment\n        }\n      }]).then(res => {\n        this.getBlog(this.state.blogId);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getBlogs();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentPage != prevState.currentPage) this.getBlogs();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Create a new Blog\"), /*#__PURE__*/React.createElement(Route, {\n      path: \"/admin\",\n      render: ({\n        match: {\n          url\n        }\n      }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: `${url}/`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, \"Success\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Blogs, {\n        blogs: this.state.blogs,\n        loading: this.state.loading,\n        blogId: this.setId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Pagination, {\n        blogsPerPage: this.state.blogsPerPage,\n        totalBlogs: this.state.totalBlogs,\n        paginate: this.paginate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/admin/#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Blogs, {\n        blogs: this.state.blogs,\n        loading: this.state.loading,\n        blogId: this.setId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Pagination, {\n        blogsPerPage: this.state.blogsPerPage,\n        totalBlogs: this.state.totalBlogs,\n        paginate: this.paginate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Route, {\n        path: \"/admin/blogData\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(BlogData, {\n        loading: this.state.loadingBlog,\n        blog: this.state.blog,\n        comment: this.comment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default DashBoard;","map":{"version":3,"sources":["C:/Users/pingu/Desktop/QSTP/WebD/final_project/src/components/pages/DashBoard.js"],"names":["React","Component","BrowserRouter","Router","Route","Blogs","Pagination","BlogData","axios","DashBoard","state","blogs","currentPage","blogsPerPage","totalBlogs","loading","loadingBlog","userName","password","blogId","getBlogs","setState","res","get","data","count","getBlog","id","console","log","likes","blog","paginate","pageNumber","setId","comment","put","propName","value","then","componentDidMount","componentDidUpdate","prevProps","prevState","render","textAlign","match","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Blogs from './AdminBlogs/Blog';\r\nimport Pagination from './AdminBlogs/Pagination';\r\nimport BlogData from './AdminBlogs/BlogData';\r\nimport axios from 'axios';\r\nclass DashBoard extends Component {\r\n  state = {\r\n    blogs: [],\r\n    currentPage: 1,\r\n    blogsPerPage: 10,\r\n    totalBlogs: 0,\r\n    loading: false,\r\n    loadingBlog: false,\r\n    userName: '',\r\n    password: '',\r\n    blogId: 0,\r\n  };\r\n  componentDidMount() {\r\n    this.getBlogs();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.currentPage != prevState.currentPage) this.getBlogs();\r\n  }\r\n  getBlogs = async () => {\r\n    this.setState({ loading: true });\r\n    let res = await axios.get(\r\n      'https://blogdatabase0101.herokuapp.com/page/' + this.state.currentPage\r\n    );\r\n    this.setState({\r\n      blogs: res.data.blogs,\r\n      totalBlogs: res.data.count,\r\n      loading: false,\r\n    });\r\n  };\r\n  getBlog = async (id) => {\r\n    this.setState({ loadingBlog: true });\r\n    let res = await axios.get('https://blogdatabase0101.herokuapp.com/' + id);\r\n    console.log('LLikes=', res.data.likes);\r\n    this.setState({\r\n      blog: res.data,\r\n      loadingBlog: false,\r\n    });\r\n  };\r\n  paginate = (pageNumber) => {\r\n    this.setState({\r\n      currentPage: pageNumber,\r\n    });\r\n  };\r\n  setId = (id) => {\r\n    this.setState({ blogId: id });\r\n    this.getBlog(id);\r\n  };\r\n  comment = (comment) => {\r\n    console.log('commented');\r\n    console.log(comment);\r\n    axios\r\n      .put('https://blogdatabase0101.herokuapp.com/' + this.state.blogId, [\r\n        { propName: 'comments', value: { value: '' + comment } },\r\n      ])\r\n      .then((res) => {\r\n        this.getBlog(this.state.blogId);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <button\r\n          className=\"btn btn-primary btn-block\"\r\n          style={{ textAlign: 'center' }}>\r\n          Create a new Blog\r\n        </button>\r\n        <Route\r\n          path=\"/admin\"\r\n          render={({ match: { url } }) => (\r\n            <>\r\n              <Route exact path={`${url}/`}>\r\n                <p>Success</p>\r\n                <div className=\"container mt-5\">\r\n                  <Blogs\r\n                    blogs={this.state.blogs}\r\n                    loading={this.state.loading}\r\n                    blogId={this.setId}\r\n                  />\r\n                  <Pagination\r\n                    blogsPerPage={this.state.blogsPerPage}\r\n                    totalBlogs={this.state.totalBlogs}\r\n                    paginate={this.paginate}\r\n                  />\r\n                </div>\r\n              </Route>\r\n              <Route exact path=\"/admin/#\">\r\n                <div className=\"container mt-5\">\r\n                  <Blogs\r\n                    blogs={this.state.blogs}\r\n                    loading={this.state.loading}\r\n                    blogId={this.setId}\r\n                  />\r\n                  <Pagination\r\n                    blogsPerPage={this.state.blogsPerPage}\r\n                    totalBlogs={this.state.totalBlogs}\r\n                    paginate={this.paginate}\r\n                  />\r\n                </div>\r\n              </Route>\r\n              <Route path=\"/admin/blogData\">\r\n                <BlogData\r\n                  loading={this.state.loadingBlog}\r\n                  blog={this.state.blog}\r\n                  comment={this.comment}\r\n                />\r\n              </Route>\r\n            </>\r\n          )}\r\n        />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashBoard;\r\n"]},"metadata":{},"sourceType":"module"}